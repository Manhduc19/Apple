//
//  CameraNavigator.swift
//  baseapp
//
//  Created Thanh Nguyên Trần on 14/04/2022.
//  Copyright © 2022 Avengers Mobile Team. All rights reserved.
//
//  Template generated by Avengers Mobile Team
//

import Foundation

//                        _oo0oo_
//                       o8888888o
//                       88" . "88
//                       (| -_- |)
//                       0\  =  /0
//                     ___/`---'\___
//                   .' \|     |// '.
//                  / \|||  :  |||// \
//                 / _||||| -:- |||||- \
//                |   | \\  -  /// |   |
//                | \_|  ''\---/''  |_/ |
//                \  .-\__  '-'  ___/-. /
//              ___'. .'  /--.--\  `. .'___
//           ."" '<  `.___\_<|>_/___.' >' "".
//          | | :  `- \`.;`\ _ /`;.`/ - ` : | |
//          \  \ `_.   \_ __\ /__ _/   .-` /  /
//      =====`-.____`.___ \_____/___.-`___.-'=====
//                        `=---='
// Đức phật nơi đây phù hộ code con chạy không Bug. Nam mô a di đà Phật

enum CameraRouter: RouterType {
    case snaptip
    case results(item: [ItemModel], userImage: UIImage, identifyType: HomeItemType)
    case premium
}

class CameraNavigator: BaseNavigator<CameraRouter> {
    override func navigate(to:CameraRouter) {
        switch to {
        case .results(let itemResults, let userImage, let type) :
            let resultVm = ResultViewModel()
            let resultNav = ResultNavigator()
            resultVm.results = itemResults
            resultVm.userImage = userImage
            resultVm.itemIdentifyType = type
            resultVm.isLoadFromMoreResults == false
            print("identify camera", resultVm.itemIdentifyType)
            resultVm.loadResultsModel()
            let resultvc = ResultController(viewModel: resultVm, navigator: resultNav)
            viewController?.navigationController?.pushViewController(resultvc, animated: true)
        case .snaptip :
            let vm = SnaptipsViewModel()
            let nav = SnaptipsNavigator()
            let snapvc = SnaptipsController(viewModel: vm, navigator: nav)
            snapvc.modalPresentationStyle = .fullScreen
            viewController?.present(snapvc, animated: true, completion: nil)
        case .premium:
            let viewModel = PremiumViewModel()
            let navigator = PremiumNavigator.init()
            let controller = PremiumController(viewModel: viewModel, navigator: navigator)
            controller.modalPresentationStyle = .fullScreen
            viewController?.navigationController?.present(controller, animated: true)
        }
    }

    deinit {
        print("Deinit: " + String(describing: type(of: self)))
    }

}

//
//  SnaptipsController.swift
//  baseapp
//
//  Created Thanh Nguyên Trần on 13/04/2022.
//  Copyright © 2022 Avengers Mobile Team. All rights reserved.
//
//  Template generated by Avengers Mobile Team
//

import UIKit

//                        _oo0oo_
//                       o8888888o
//                       88" . "88
//                       (| -_- |)
//                       0\  =  /0
//                     ___/`---'\___
//                   .' \|     |// '.
//                  / \|||  :  |||// \
//                 / _||||| -:- |||||- \
//                |   | \\  -  /// |   |
//                | \_|  ''\---/''  |_/ |
//                \  .-\__  '-'  ___/-. /
//              ___'. .'  /--.--\  `. .'___
//           ."" '<  `.___\_<|>_/___.' >' "".
//          | | :  `- \`.;`\ _ /`;.`/ - ` : | |
//          \  \ `_.   \_ __\ /__ _/   .-` /  /
//      =====`-.____`.___ \_____/___.-`___.-'=====
//                        `=---='
// Đức phật nơi đây phù hộ code con chạy không Bug. Nam mô a di đà Phật

class SnaptipsController: BaseController<SnaptipsViewModel, SnaptipsNavigator> {


    // MARK: - Properties

    @IBOutlet weak var snaptipCollectionView: UICollectionView!
    
    @IBOutlet weak var backBtn: UIButton!
    var cellSpacing :CGFloat = 20
    
    var datas  : [SnapTipsModel] = DataSnapTips
    // MARK: - Life Cycle
    override func viewDidLoad() {
        super.viewDidLoad()
        setupCollectionView()
        
    }

    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)

    }

    override func viewDidLayoutSubviews() {
        super.viewDidLayoutSubviews()
        snaptipCollectionView.isScrollEnabled = snaptipCollectionView.contentSize.height > snaptipCollectionView.frame.size.height
    }


    // MARK: - Binding UI
    override func bindUI() {
        super.bindUI()
        backBtn.reactive.tap.observeNext { [weak self] in
        guard let strongSelf = self else { return }
        strongSelf.navigationController?.popViewController(animated: true)
        }
    }

    //MARK: - Functions
    func doSomeThing() {

    }
    func setupCollectionView(){
        snaptipCollectionView.delegate = self
        snaptipCollectionView.dataSource = self
        snaptipCollectionView.register(cellType: SnaptipsCell.self, bundle: nil)
        snaptipCollectionView.contentInset = .init(top: cellSpacing, left: cellSpacing, bottom: cellSpacing, right: cellSpacing)
    }

}

// MARK: - Extension
extension SnaptipsController : UICollectionViewDelegate , UICollectionViewDataSource ,UICollectionViewDelegateFlowLayout {
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return datas.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(with: SnaptipsCell.self, for: indexPath)
        cell.snaptipImage.image = datas[indexPath.row].image
        cell.snaptipLabel.text = datas[indexPath.row].label
        return cell
    }
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        let numOfCells: CGFloat = 2
        let cellWidth = (self.snaptipCollectionView.frame.width - (cellSpacing * 3)) / numOfCells
        let cellHeight = (self.snaptipCollectionView.frame.height - cellSpacing * 3) / numOfCells
        return CGSize(width: cellWidth, height:  cellHeight)
    }
    
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumLineSpacingForSectionAt section: Int) -> CGFloat {
        return cellSpacing
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt section: Int) -> CGFloat {
        return cellSpacing
    }
    
    
}

